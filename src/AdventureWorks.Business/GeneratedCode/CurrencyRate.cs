// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.72
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace AdventureWorks.Business.Entities
{

    // CurrencyRate
        ///<summary>
        /// Currency exchange rates.
        ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public partial class CurrencyRate
    {

        ///<summary>
        /// Primary key for CurrencyRate records.
        ///</summary>
        public int? CurrencyRateId { get; set; } // CurrencyRateID (Primary key)

        ///<summary>
        /// Date and time the exchange rate was obtained.
        ///</summary>
        public System.DateTime CurrencyRateDate { get; set; } // CurrencyRateDate

        ///<summary>
        /// Exchange rate was converted from this currency code.
        ///</summary>
        public string FromCurrencyCode { get; set; } // FromCurrencyCode (length: 3)

        ///<summary>
        /// Exchange rate was converted to this currency code.
        ///</summary>
        public string ToCurrencyCode { get; set; } // ToCurrencyCode (length: 3)

        ///<summary>
        /// Average exchange rate for the day.
        ///</summary>
        public decimal AverageRate { get; set; } // AverageRate

        ///<summary>
        /// Final exchange rate for the day.
        ///</summary>
        public decimal EndOfDayRate { get; set; } // EndOfDayRate

        ///<summary>
        /// Date and time the record was last updated.
        ///</summary>
        public System.DateTime ModifiedDate { get; set; } // ModifiedDate

        // Reverse navigation

        /// <summary>
        /// Child SalesOrderHeaders where [SalesOrderHeader].[CurrencyRateID] point to this entity (FK_SalesOrderHeader_CurrencyRate_CurrencyRateID)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<SalesOrderHeader> SalesOrderHeaders { get; set; } // SalesOrderHeader.FK_SalesOrderHeader_CurrencyRate_CurrencyRateID


        // Foreign keys

        /// <summary>
        /// Parent Currency pointed by [CurrencyRate].([FromCurrencyCode]) (FK_CurrencyRate_Currency_FromCurrencyCode)
        /// </summary>
        public virtual Currency Currency_FromCurrencyCode { get; set; } // FK_CurrencyRate_Currency_FromCurrencyCode

        /// <summary>
        /// Parent Currency pointed by [CurrencyRate].([ToCurrencyCode]) (FK_CurrencyRate_Currency_ToCurrencyCode)
        /// </summary>
        public virtual Currency Currency_ToCurrencyCode { get; set; } // FK_CurrencyRate_Currency_ToCurrencyCode

        public CurrencyRate()
        {
            ModifiedDate = System.DateTime.Now;
            SalesOrderHeaders = new System.Collections.Generic.List<SalesOrderHeader>();
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
