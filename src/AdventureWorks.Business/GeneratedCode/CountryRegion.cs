// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.72
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace AdventureWorks.Business.Entities
{

    // CountryRegion
        ///<summary>
        /// Lookup table containing the ISO standard codes for countries and regions.
        ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public partial class CountryRegion
    {

        ///<summary>
        /// ISO standard code for countries and regions.
        ///</summary>
        public string CountryRegionCode { get; set; } // CountryRegionCode (Primary key) (length: 3)

        ///<summary>
        /// Country or region name.
        ///</summary>
        public string Name { get; set; } // Name (length: 50)

        ///<summary>
        /// Date and time the record was last updated.
        ///</summary>
        public System.DateTime ModifiedDate { get; set; } // ModifiedDate

        // Reverse navigation

        /// <summary>
        /// Child CountryRegionCurrencies where [CountryRegionCurrency].[CountryRegionCode] point to this entity (FK_CountryRegionCurrency_CountryRegion_CountryRegionCode)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<CountryRegionCurrency> CountryRegionCurrencies { get; set; } // CountryRegionCurrency.FK_CountryRegionCurrency_CountryRegion_CountryRegionCode

        /// <summary>
        /// Child SalesTerritories where [SalesTerritory].[CountryRegionCode] point to this entity (FK_SalesTerritory_CountryRegion_CountryRegionCode)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<SalesTerritory> SalesTerritories { get; set; } // SalesTerritory.FK_SalesTerritory_CountryRegion_CountryRegionCode

        /// <summary>
        /// Child StateProvinces where [StateProvince].[CountryRegionCode] point to this entity (FK_StateProvince_CountryRegion_CountryRegionCode)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<StateProvince> StateProvinces { get; set; } // StateProvince.FK_StateProvince_CountryRegion_CountryRegionCode

        public CountryRegion()
        {
            ModifiedDate = System.DateTime.Now;
            CountryRegionCurrencies = new System.Collections.Generic.List<CountryRegionCurrency>();
            SalesTerritories = new System.Collections.Generic.List<SalesTerritory>();
            StateProvinces = new System.Collections.Generic.List<StateProvince>();
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
