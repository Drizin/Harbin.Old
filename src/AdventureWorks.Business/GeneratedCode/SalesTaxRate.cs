// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.72
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace AdventureWorks.Business.Entities
{

    // SalesTaxRate
        ///<summary>
        /// Tax rate lookup table.
        ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public partial class SalesTaxRate
    {

        ///<summary>
        /// Primary key for SalesTaxRate records.
        ///</summary>
        public int? SalesTaxRateId { get; set; } // SalesTaxRateID (Primary key)

        ///<summary>
        /// State, province, or country/region the sales tax applies to.
        ///</summary>
        public int StateProvinceId { get; set; } // StateProvinceID

        ///<summary>
        /// 1 = Tax applied to retail transactions, 2 = Tax applied to wholesale transactions, 3 = Tax applied to all sales (retail and wholesale) transactions.
        ///</summary>
        public byte TaxType { get; set; } // TaxType

        ///<summary>
        /// Tax rate amount.
        ///</summary>
        public decimal TaxRate { get; set; } // TaxRate

        ///<summary>
        /// Tax rate description.
        ///</summary>
        public string Name { get; set; } // Name (length: 50)

        ///<summary>
        /// ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
        ///</summary>
        public System.Guid Rowguid { get; set; } // rowguid

        ///<summary>
        /// Date and time the record was last updated.
        ///</summary>
        public System.DateTime ModifiedDate { get; set; } // ModifiedDate

        // Foreign keys

        /// <summary>
        /// Parent StateProvince pointed by [SalesTaxRate].([StateProvinceId]) (FK_SalesTaxRate_StateProvince_StateProvinceID)
        /// </summary>
        public virtual StateProvince StateProvince { get; set; } // FK_SalesTaxRate_StateProvince_StateProvinceID

        public SalesTaxRate()
        {
            TaxRate = 0.00m;
            Rowguid = System.Guid.NewGuid();
            ModifiedDate = System.DateTime.Now;
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
