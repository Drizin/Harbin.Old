// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.72
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace AdventureWorks.Business.Entities
{

    // Vendor
        ///<summary>
        /// Companies from whom Adventure Works Cycles purchases parts or other goods.
        ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public partial class Vendor : BusinessEntity
    {

        ///<summary>
        /// Vendor account (identification) number.
        ///</summary>
        public string AccountNumber { get; set; } // AccountNumber (length: 15)

        ///<summary>
        /// Company name.
        ///</summary>
        public string Name { get; set; } // Name (length: 50)

        ///<summary>
        /// 1 = Superior, 2 = Excellent, 3 = Above average, 4 = Average, 5 = Below average
        ///</summary>
        public byte CreditRating { get; set; } // CreditRating

        ///<summary>
        /// 0 = Do not use if another vendor is available. 1 = Preferred over other vendors supplying the same product.
        ///</summary>
        public bool PreferredVendorStatus { get; set; } // PreferredVendorStatus

        ///<summary>
        /// 0 = Vendor no longer used. 1 = Vendor is actively used.
        ///</summary>
        public bool ActiveFlag { get; set; } // ActiveFlag

        ///<summary>
        /// Vendor URL.
        ///</summary>
        public string PurchasingWebServiceUrl { get; set; } // PurchasingWebServiceURL (length: 1024)

        ///<summary>
        /// Date and time the record was last updated.
        ///</summary>
        public System.DateTime ModifiedDate { get; set; } // ModifiedDate

        // Reverse navigation

        /// <summary>
        /// Child ProductVendors where [ProductVendor].[BusinessEntityID] point to this entity (FK_ProductVendor_Vendor_BusinessEntityID)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<ProductVendor> ProductVendors { get; set; } // ProductVendor.FK_ProductVendor_Vendor_BusinessEntityID

        /// <summary>
        /// Child PurchaseOrderHeaders where [PurchaseOrderHeader].[VendorID] point to this entity (FK_PurchaseOrderHeader_Vendor_VendorID)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<PurchaseOrderHeader> PurchaseOrderHeaders { get; set; } // PurchaseOrderHeader.FK_PurchaseOrderHeader_Vendor_VendorID

        public Vendor()
        {
            PreferredVendorStatus = true;
            ActiveFlag = true;
            ModifiedDate = System.DateTime.Now;
            ProductVendors = new System.Collections.Generic.List<ProductVendor>();
            PurchaseOrderHeaders = new System.Collections.Generic.List<PurchaseOrderHeader>();
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
