// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.72
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace AdventureWorks.Business.Entities
{

    // Employee
        ///<summary>
        /// Employee information such as salary, department, and title.
        ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public partial class Employee : BusinessEntity
    {

        ///<summary>
        /// Unique national identification number such as a social security number.
        ///</summary>
        public string NationalIdNumber { get; set; } // NationalIDNumber (length: 15)

        ///<summary>
        /// Network login.
        ///</summary>
        public string LoginId { get; set; } // LoginID (length: 256)

        ///<summary>
        /// Where the employee is located in corporate hierarchy.
        ///</summary>
        public System.Data.Entity.Hierarchy.HierarchyId OrganizationNode { get; set; } // OrganizationNode

        ///<summary>
        /// The depth of the employee in the corporate hierarchy.
        ///</summary>
        public short? OrganizationLevel { get; private set; } // OrganizationLevel

        ///<summary>
        /// Work title such as Buyer or Sales Representative.
        ///</summary>
        public string JobTitle { get; set; } // JobTitle (length: 50)

        ///<summary>
        /// Date of birth.
        ///</summary>
        public System.DateTime BirthDate { get; set; } // BirthDate

        ///<summary>
        /// M = Married, S = Single
        ///</summary>
        public string MaritalStatus { get; set; } // MaritalStatus (length: 1)

        ///<summary>
        /// M = Male, F = Female
        ///</summary>
        public string Gender { get; set; } // Gender (length: 1)

        ///<summary>
        /// Employee hired on this date.
        ///</summary>
        public System.DateTime HireDate { get; set; } // HireDate

        ///<summary>
        /// Job classification. 0 = Hourly, not exempt from collective bargaining. 1 = Salaried, exempt from collective bargaining.
        ///</summary>
        public bool SalariedFlag { get; set; } // SalariedFlag

        ///<summary>
        /// Number of available vacation hours.
        ///</summary>
        public short VacationHours { get; set; } // VacationHours

        ///<summary>
        /// Number of available sick leave hours.
        ///</summary>
        public short SickLeaveHours { get; set; } // SickLeaveHours

        ///<summary>
        /// 0 = Inactive, 1 = Active
        ///</summary>
        public bool CurrentFlag { get; set; } // CurrentFlag

        ///<summary>
        /// ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
        ///</summary>
        public System.Guid Rowguid { get; set; } // rowguid

        ///<summary>
        /// Date and time the record was last updated.
        ///</summary>
        public System.DateTime ModifiedDate { get; set; } // ModifiedDate

        // Reverse navigation

        /// <summary>
        /// Child Documents where [Document].[Owner] point to this entity (FK_Document_Employee_Owner)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Document> Documents { get; set; } // Document.FK_Document_Employee_Owner

        /// <summary>
        /// Child EmployeeDepartmentHistories where [EmployeeDepartmentHistory].[BusinessEntityID] point to this entity (FK_EmployeeDepartmentHistory_Employee_BusinessEntityID)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<EmployeeDepartmentHistory> EmployeeDepartmentHistories { get; set; } // EmployeeDepartmentHistory.FK_EmployeeDepartmentHistory_Employee_BusinessEntityID

        /// <summary>
        /// Child EmployeePayHistories where [EmployeePayHistory].[BusinessEntityID] point to this entity (FK_EmployeePayHistory_Employee_BusinessEntityID)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<EmployeePayHistory> EmployeePayHistories { get; set; } // EmployeePayHistory.FK_EmployeePayHistory_Employee_BusinessEntityID

        /// <summary>
        /// Child JobCandidates where [JobCandidate].[BusinessEntityID] point to this entity (FK_JobCandidate_Employee_BusinessEntityID)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<JobCandidate> JobCandidates { get; set; } // JobCandidate.FK_JobCandidate_Employee_BusinessEntityID

        /// <summary>
        /// Child PurchaseOrderHeaders where [PurchaseOrderHeader].[EmployeeID] point to this entity (FK_PurchaseOrderHeader_Employee_EmployeeID)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<PurchaseOrderHeader> PurchaseOrderHeaders { get; set; } // PurchaseOrderHeader.FK_PurchaseOrderHeader_Employee_EmployeeID

        public Employee()
        {
            SalariedFlag = true;
            VacationHours = 0;
            SickLeaveHours = 0;
            CurrentFlag = true;
            Rowguid = System.Guid.NewGuid();
            ModifiedDate = System.DateTime.Now;
            Documents = new System.Collections.Generic.List<Document>();
            EmployeeDepartmentHistories = new System.Collections.Generic.List<EmployeeDepartmentHistory>();
            EmployeePayHistories = new System.Collections.Generic.List<EmployeePayHistory>();
            JobCandidates = new System.Collections.Generic.List<JobCandidate>();
            PurchaseOrderHeaders = new System.Collections.Generic.List<PurchaseOrderHeader>();
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
