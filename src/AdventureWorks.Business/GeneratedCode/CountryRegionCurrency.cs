// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.72
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace AdventureWorks.Business.Entities
{

    // CountryRegionCurrency
        ///<summary>
        /// Cross-reference table mapping ISO currency codes to a country or region.
        ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public partial class CountryRegionCurrency
    {

        ///<summary>
        /// ISO code for countries and regions. Foreign key to CountryRegion.CountryRegionCode.
        ///</summary>
        public string CountryRegionCode { get; set; } // CountryRegionCode (Primary key) (length: 3)

        ///<summary>
        /// ISO standard currency code. Foreign key to Currency.CurrencyCode.
        ///</summary>
        public string CurrencyCode { get; set; } // CurrencyCode (Primary key) (length: 3)

        ///<summary>
        /// Date and time the record was last updated.
        ///</summary>
        public System.DateTime ModifiedDate { get; set; } // ModifiedDate

        // Foreign keys

        /// <summary>
        /// Parent CountryRegion pointed by [CountryRegionCurrency].([CountryRegionCode]) (FK_CountryRegionCurrency_CountryRegion_CountryRegionCode)
        /// </summary>
        public virtual CountryRegion CountryRegion { get; set; } // FK_CountryRegionCurrency_CountryRegion_CountryRegionCode

        /// <summary>
        /// Parent Currency pointed by [CountryRegionCurrency].([CurrencyCode]) (FK_CountryRegionCurrency_Currency_CurrencyCode)
        /// </summary>
        public virtual Currency Currency { get; set; } // FK_CountryRegionCurrency_Currency_CurrencyCode

        public CountryRegionCurrency()
        {
            ModifiedDate = System.DateTime.Now;
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
