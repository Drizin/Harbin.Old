// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.72
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace AdventureWorks.Business.Entities
{

    // ErrorLog
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public partial class ErrorLogConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ErrorLog>
    {
        public ErrorLogConfiguration() : this("dbo")
        {
        }

        public ErrorLogConfiguration(string schema)
        {
            ToTable("ErrorLog", schema);
            HasKey(x => x.ErrorLogId);

            Property(x => x.ErrorLogId).HasColumnName(@"ErrorLogID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ErrorTime).HasColumnName(@"ErrorTime").HasColumnType("datetime").IsRequired();
            Property(x => x.UserName).HasColumnName(@"UserName").HasColumnType("nvarchar").IsRequired().HasMaxLength(128);
            Property(x => x.ErrorNumber).HasColumnName(@"ErrorNumber").HasColumnType("int").IsRequired();
            Property(x => x.ErrorSeverity).HasColumnName(@"ErrorSeverity").HasColumnType("int").IsOptional();
            Property(x => x.ErrorState).HasColumnName(@"ErrorState").HasColumnType("int").IsOptional();
            Property(x => x.ErrorProcedure).HasColumnName(@"ErrorProcedure").HasColumnType("nvarchar").IsOptional().HasMaxLength(126);
            Property(x => x.ErrorLine).HasColumnName(@"ErrorLine").HasColumnType("int").IsOptional();
            Property(x => x.ErrorMessage).HasColumnName(@"ErrorMessage").HasColumnType("nvarchar").IsRequired().HasMaxLength(4000);
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
