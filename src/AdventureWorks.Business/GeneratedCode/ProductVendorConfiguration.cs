// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.72
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace AdventureWorks.Business.Entities
{

    // ProductVendor
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public partial class ProductVendorConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ProductVendor>
    {
        public ProductVendorConfiguration() : this("Purchasing")
        {
        }

        public ProductVendorConfiguration(string schema)
        {
            ToTable("ProductVendor", schema);
            HasKey(x => new { x.ProductId, x.BusinessEntityId });

            Property(x => x.ProductId).HasColumnName(@"ProductID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.BusinessEntityId).HasColumnName(@"BusinessEntityID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.AverageLeadTime).HasColumnName(@"AverageLeadTime").HasColumnType("int").IsRequired();
            Property(x => x.StandardPrice).HasColumnName(@"StandardPrice").HasColumnType("money").IsRequired().HasPrecision(19,4);
            Property(x => x.LastReceiptCost).HasColumnName(@"LastReceiptCost").HasColumnType("money").IsOptional().HasPrecision(19,4);
            Property(x => x.LastReceiptDate).HasColumnName(@"LastReceiptDate").HasColumnType("datetime").IsOptional();
            Property(x => x.MinOrderQty).HasColumnName(@"MinOrderQty").HasColumnType("int").IsRequired();
            Property(x => x.MaxOrderQty).HasColumnName(@"MaxOrderQty").HasColumnType("int").IsRequired();
            Property(x => x.OnOrderQty).HasColumnName(@"OnOrderQty").HasColumnType("int").IsOptional();
            Property(x => x.UnitMeasureCode).HasColumnName(@"UnitMeasureCode").HasColumnType("nchar").IsRequired().IsFixedLength().HasMaxLength(3);
            Property(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType("datetime").IsRequired();

            // Foreign keys
            HasRequired(a => a.Product).WithMany(b => b.ProductVendors).HasForeignKey(c => c.ProductId).WillCascadeOnDelete(false); // FK_ProductVendor_Product_ProductID
            HasRequired(a => a.UnitMeasure).WithMany(b => b.ProductVendors).HasForeignKey(c => c.UnitMeasureCode).WillCascadeOnDelete(false); // FK_ProductVendor_UnitMeasure_UnitMeasureCode
            HasRequired(a => a.Vendor).WithMany(b => b.ProductVendors).HasForeignKey(c => c.BusinessEntityId).WillCascadeOnDelete(false); // FK_ProductVendor_Vendor_BusinessEntityID
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
