// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.72
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace AdventureWorks.Business.Entities
{

    // Person
        ///<summary>
        /// Human beings involved with AdventureWorks: employees, customer contacts, and vendor contacts.
        ///</summary>
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public partial class Person : BusinessEntity
    {

        ///<summary>
        /// Primary type of person: SC = Store Contact, IN = Individual (retail) customer, SP = Sales person, EM = Employee (non-sales), VC = Vendor contact, GC = General contact
        ///</summary>
        public string PersonType { get; set; } // PersonType (length: 2)

        ///<summary>
        /// 0 = The data in FirstName and LastName are stored in western style (first name, last name) order.  1 = Eastern style (last name, first name) order.
        ///</summary>
        public bool NameStyle { get; set; } // NameStyle

        ///<summary>
        /// A courtesy title. For example, Mr. or Ms.
        ///</summary>
        public string Title { get; set; } // Title (length: 8)

        ///<summary>
        /// First name of the person.
        ///</summary>
        public string FirstName { get; set; } // FirstName (length: 50)

        ///<summary>
        /// Middle name or middle initial of the person.
        ///</summary>
        public string MiddleName { get; set; } // MiddleName (length: 50)

        ///<summary>
        /// Last name of the person.
        ///</summary>
        public string LastName { get; set; } // LastName (length: 50)

        ///<summary>
        /// Surname suffix. For example, Sr. or Jr.
        ///</summary>
        public string Suffix { get; set; } // Suffix (length: 10)

        ///<summary>
        /// 0 = Contact does not wish to receive e-mail promotions, 1 = Contact does wish to receive e-mail promotions from AdventureWorks, 2 = Contact does wish to receive e-mail promotions from AdventureWorks and selected partners.
        ///</summary>
        public int EmailPromotion { get; set; } // EmailPromotion

        ///<summary>
        /// Additional contact information about the person stored in xml format.
        ///</summary>
        public string AdditionalContactInfo { get; set; } // AdditionalContactInfo

        ///<summary>
        /// Personal information such as hobbies, and income collected from online shoppers. Used for sales analysis.
        ///</summary>
        public string Demographics { get; set; } // Demographics

        ///<summary>
        /// ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
        ///</summary>
        public System.Guid Rowguid { get; set; } // rowguid

        ///<summary>
        /// Date and time the record was last updated.
        ///</summary>
        public System.DateTime ModifiedDate { get; set; } // ModifiedDate

        // Reverse navigation

        /// <summary>
        /// Child BusinessEntityContacts where [BusinessEntityContact].[PersonID] point to this entity (FK_BusinessEntityContact_Person_PersonID)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<BusinessEntityContact> PersonBusinessEntityContacts { get; set; } // BusinessEntityContact.FK_BusinessEntityContact_Person_PersonID

        /// <summary>
        /// Child Customers where [Customer].[PersonID] point to this entity (FK_Customer_Person_PersonID)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Customer> Customers { get; set; } // Customer.FK_Customer_Person_PersonID

        /// <summary>
        /// Child PersonCreditCards where [PersonCreditCard].[BusinessEntityID] point to this entity (FK_PersonCreditCard_Person_BusinessEntityID)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<PersonCreditCard> PersonCreditCards { get; set; } // PersonCreditCard.FK_PersonCreditCard_Person_BusinessEntityID

        /// <summary>
        /// Child PersonPhones where [PersonPhone].[BusinessEntityID] point to this entity (FK_PersonPhone_Person_BusinessEntityID)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<PersonPhone> PersonPhones { get; set; } // PersonPhone.FK_PersonPhone_Person_BusinessEntityID

        public Person()
        {
            NameStyle = false;
            EmailPromotion = 0;
            Rowguid = System.Guid.NewGuid();
            ModifiedDate = System.DateTime.Now;
            PersonBusinessEntityContacts = new System.Collections.Generic.List<BusinessEntityContact>();
            Customers = new System.Collections.Generic.List<Customer>();
            PersonCreditCards = new System.Collections.Generic.List<PersonCreditCard>();
            PersonPhones = new System.Collections.Generic.List<PersonPhone>();
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
