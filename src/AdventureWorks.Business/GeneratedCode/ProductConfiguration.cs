// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.72
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace AdventureWorks.Business.Entities
{

    // Product
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.4.0")]
    public partial class ProductConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Product>
    {
        public ProductConfiguration() : this("Production")
        {
        }

        public ProductConfiguration(string schema)
        {
            ToTable("Product", schema);
            HasKey(x => x.ProductId);

            Property(x => x.ProductId).HasColumnName(@"ProductID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Name).HasColumnName(@"Name").HasColumnType("nvarchar").IsRequired().HasMaxLength(50);
            Property(x => x.ProductNumber).HasColumnName(@"ProductNumber").HasColumnType("nvarchar").IsRequired().HasMaxLength(25);
            Property(x => x.MakeFlag).HasColumnName(@"MakeFlag").HasColumnType("bit").IsRequired();
            Property(x => x.FinishedGoodsFlag).HasColumnName(@"FinishedGoodsFlag").HasColumnType("bit").IsRequired();
            Property(x => x.Color).HasColumnName(@"Color").HasColumnType("nvarchar").IsOptional().HasMaxLength(15);
            Property(x => x.SafetyStockLevel).HasColumnName(@"SafetyStockLevel").HasColumnType("smallint").IsRequired();
            Property(x => x.ReorderPoint).HasColumnName(@"ReorderPoint").HasColumnType("smallint").IsRequired();
            Property(x => x.StandardCost).HasColumnName(@"StandardCost").HasColumnType("money").IsRequired().HasPrecision(19,4);
            Property(x => x.ListPrice).HasColumnName(@"ListPrice").HasColumnType("money").IsRequired().HasPrecision(19,4);
            Property(x => x.Size).HasColumnName(@"Size").HasColumnType("nvarchar").IsOptional().HasMaxLength(5);
            Property(x => x.SizeUnitMeasureCode).HasColumnName(@"SizeUnitMeasureCode").HasColumnType("nchar").IsOptional().IsFixedLength().HasMaxLength(3);
            Property(x => x.WeightUnitMeasureCode).HasColumnName(@"WeightUnitMeasureCode").HasColumnType("nchar").IsOptional().IsFixedLength().HasMaxLength(3);
            Property(x => x.Weight).HasColumnName(@"Weight").HasColumnType("decimal").IsOptional().HasPrecision(8,2);
            Property(x => x.DaysToManufacture).HasColumnName(@"DaysToManufacture").HasColumnType("int").IsRequired();
            Property(x => x.ProductLine).HasColumnName(@"ProductLine").HasColumnType("nchar").IsOptional().IsFixedLength().HasMaxLength(2);
            Property(x => x.Class).HasColumnName(@"Class").HasColumnType("nchar").IsOptional().IsFixedLength().HasMaxLength(2);
            Property(x => x.Style).HasColumnName(@"Style").HasColumnType("nchar").IsOptional().IsFixedLength().HasMaxLength(2);
            Property(x => x.ProductSubcategoryId).HasColumnName(@"ProductSubcategoryID").HasColumnType("int").IsOptional();
            Property(x => x.ProductModelId).HasColumnName(@"ProductModelID").HasColumnType("int").IsOptional();
            Property(x => x.SellStartDate).HasColumnName(@"SellStartDate").HasColumnType("datetime").IsRequired();
            Property(x => x.SellEndDate).HasColumnName(@"SellEndDate").HasColumnType("datetime").IsOptional();
            Property(x => x.DiscontinuedDate).HasColumnName(@"DiscontinuedDate").HasColumnType("datetime").IsOptional();
            Property(x => x.Rowguid).HasColumnName(@"rowguid").HasColumnType("uniqueidentifier").IsRequired();
            Property(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType("datetime").IsRequired();

            // Foreign keys
            HasOptional(a => a.ProductModel).WithMany(b => b.Products).HasForeignKey(c => c.ProductModelId).WillCascadeOnDelete(false); // FK_Product_ProductModel_ProductModelID
            HasOptional(a => a.ProductSubcategory).WithMany(b => b.Products).HasForeignKey(c => c.ProductSubcategoryId).WillCascadeOnDelete(false); // FK_Product_ProductSubcategory_ProductSubcategoryID
            HasOptional(a => a.UnitMeasure_SizeUnitMeasureCode).WithMany(b => b.Products_SizeUnitMeasureCode).HasForeignKey(c => c.SizeUnitMeasureCode).WillCascadeOnDelete(false); // FK_Product_UnitMeasure_SizeUnitMeasureCode
            HasOptional(a => a.UnitMeasure_WeightUnitMeasureCode).WithMany(b => b.Products_WeightUnitMeasureCode).HasForeignKey(c => c.WeightUnitMeasureCode).WillCascadeOnDelete(false); // FK_Product_UnitMeasure_WeightUnitMeasureCode
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
